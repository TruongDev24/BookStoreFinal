/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.Model2.HoaDonCTModel;
import com.raven.Model2.HoaDonModel;
import com.raven.Service.HoaDonSV;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.*;

/**
 *
 * @author RAVEN
 */
public class Form_QLHoaDon extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private HoaDonSV sv = new HoaDonSV();
    private List<HoaDonModel> list1 = new ArrayList<>();
    private List<HoaDonCTModel> list2 = new ArrayList<>();

    /**
     * Creates new form Form_1
     */
    public Form_QLHoaDon() {
        initComponents();
        dtm = (DefaultTableModel) tbHoaDon.getModel();
        list1 = sv.getAll();
        showData(list1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        xuatFileExcel = new javax.swing.JButton();
        CbxHoaDon = new javax.swing.JComboBox<>();
        searchBar = new javax.swing.JTextField();
        panelBorder1 = new com.raven.swing.PanelBorder();
        jLabel2 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        tbHoaDon = new com.raven.swing.Table();
        jLabel1 = new javax.swing.JLabel();

        xuatFileExcel.setBackground(new java.awt.Color(18, 64, 118));
        xuatFileExcel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xuatFileExcel.setForeground(new java.awt.Color(249, 232, 151));
        xuatFileExcel.setText("Export Ecel");
        xuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatFileExcelActionPerformed(evt);
            }
        });

        CbxHoaDon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc định", "Xếp theo tên Khách hàng", "Xếp theo tên Nhân viên", "Xếp theo ngày tạo", " " }));
        CbxHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxHoaDonActionPerformed(evt);
            }
        });

        searchBar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Quản lí hóa đơn");

        spTable.setBorder(null);

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã đơn hàng", "Khách Hàng", "Nhân Viên", "Ngày Tạo", "Tổng Tiền", "Voucher", "Phương Thức", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHoaDon.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tbHoaDon.getTableHeader().setReorderingAllowed(false);
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        spTable.setViewportView(tbHoaDon);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addContainerGap(956, Short.MAX_VALUE))
            .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                    .addContainerGap(18, Short.MAX_VALUE)
                    .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 1091, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addContainerGap(576, Short.MAX_VALUE))
            .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/search.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(CbxHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(xuatFileExcel)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CbxHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xuatFileExcel))))
                .addContainerGap(652, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(63, Short.MAX_VALUE)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(16, 16, 16)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        int row = tbHoaDon.getSelectedRow();
        Object value = tbHoaDon.getValueAt(row, 0);
        HDCT ct = new HDCT(null, true);
        list2 = sv.getChiTietTT(value);
        ct.showData(list2);
        ct.setVisible(true);
    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void xuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatFileExcelActionPerformed
        // Hiển thị hộp thoại xác nhận trước khi xuất file Excel
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xuất file Excel không?", "Xác nhận xuất file", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Hiển thị hộp thoại để người dùng nhập tên của Sheet
            String sheetName = JOptionPane.showInputDialog(this, "Nhập tên cho Sheet:", "Tên Sheet", JOptionPane.PLAIN_MESSAGE);

            // Nếu người dùng nhấn Cancel hoặc không nhập tên, không làm gì cả
            if (sheetName != null && !sheetName.isEmpty()) {
                // Khởi tạo một workbook Excel
                Workbook workbook = new HSSFWorkbook(); // Hoặc Workbook workbook = new XSSFWorkbook(); nếu bạn muốn sử dụng định dạng .xlsx

                // Tạo một trang mới với tên do người dùng nhập vào
                Sheet sheet = workbook.createSheet(sheetName);

                // Đếm số dòng và số cột trong bảng
                int rowCount = tbHoaDon.getRowCount();
                int columnCount = tbHoaDon.getColumnCount();

                // Tạo hàng đầu tiên là tiêu đề
                Row headerRow = sheet.createRow(0);
                for (int i = 0; i < columnCount; i++) {
                    headerRow.createCell(i).setCellValue(tbHoaDon.getColumnName(i));
                }

                // Điền dữ liệu từ bảng vào tệp Excel
                for (int i = 0; i < rowCount; i++) {
                    Row row = sheet.createRow(i + 1);
                    for (int j = 0; j < columnCount; j++) {
                        row.createCell(j).setCellValue(String.valueOf(tbHoaDon.getValueAt(i, j)));
                    }
                }

                // Chọn vị trí lưu tệp Excel
                JFileChooser fileChooser = new JFileChooser();
                int option = fileChooser.showSaveDialog(this);
                if (option == JFileChooser.APPROVE_OPTION) {
                    try {
                        // Lưu workbook vào tệp Excel
                        String filePath = fileChooser.getSelectedFile().getAbsolutePath();
                        FileOutputStream fileOut = new FileOutputStream(filePath + ".xls"); // Định dạng .xls cho Workbook workbook = new HSSFWorkbook(); và .xlsx cho Workbook workbook = new XSSFWorkbook();
                        workbook.write(fileOut);
                        fileOut.close();
                        JOptionPane.showMessageDialog(this, "Xuất file Excel thành công!");
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(this, "Xuất file Excel thất bại: " + e.getMessage());
                    }
                }
            }
        }

    }//GEN-LAST:event_xuatFileExcelActionPerformed

    private void CbxHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxHoaDonActionPerformed
        // TODO add your handling code here:
        if (CbxHoaDon.getSelectedItem().equals("Mặc định")) {
            list1 = sv.getAll();
            showData(list1);
        } else if (CbxHoaDon.getSelectedItem().equals("Xếp theo tên Khách hàng")) {
            list1 = sv.SapXepTenKH();
            showData(list1);
        } else if (CbxHoaDon.getSelectedItem().equals("Xếp theo tên Nhân viên")) {
            list1 = sv.SapXepTenNV();
            showData(list1);
        } else if (CbxHoaDon.getSelectedItem().equals("Xếp theo ngày tạo")) {
            list1 = sv.SapXepNgayTao();
            showData(list1);
        }
    }//GEN-LAST:event_CbxHoaDonActionPerformed

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
        String ten = searchBar.getText();
        list1 = sv.TimKH(ten);
        showData(list1);
    }//GEN-LAST:event_searchBarActionPerformed

    public void showData(List<HoaDonModel> listTT) {
        dtm.setRowCount(0);
        listTT.forEach(c -> {
            String ngayTaoTrimmed = c.getNgayTao().substring(0, c.getNgayTao().length() - 8);
            dtm.addRow(new Object[]{
                c.getId(), c.getKhach(), c.getNhanVien(), ngayTaoTrimmed, c.getTongTien(), c.getVoucher(), c.getPhuongThuc(), c.getTrangThai()
            });
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxHoaDon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private com.raven.swing.PanelBorder panelBorder1;
    private javax.swing.JTextField searchBar;
    private javax.swing.JScrollPane spTable;
    private com.raven.swing.Table tbHoaDon;
    private javax.swing.JButton xuatFileExcel;
    // End of variables declaration//GEN-END:variables
}
