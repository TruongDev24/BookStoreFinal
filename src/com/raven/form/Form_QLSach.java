/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import com.raven.Model2.Sach;
import com.raven.Service.SachService;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Form_QLSach extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private List<Sach> list = new ArrayList<>();
    private SachService sv = new SachService();

    /**
     * Creates new form Form_1
     */
    public Form_QLSach() {
        initComponents();
        dtm = (DefaultTableModel) SachTB.getModel();
        list = sv.getAll();
        showData(list);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        xoaBtn = new javax.swing.JButton();
        suaBtn = new javax.swing.JButton();
        themBtn = new javax.swing.JButton();
        Sort = new javax.swing.JComboBox<>();
        searchbar = new javax.swing.JTextField();
        panelBorder1 = new com.raven.swing.PanelBorder();
        jLabel2 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        SachTB = new com.raven.swing.Table();
        jLabel1 = new javax.swing.JLabel();
        nhapHangbtn = new javax.swing.JButton();

        xoaBtn.setBackground(new java.awt.Color(18, 64, 118));
        xoaBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xoaBtn.setForeground(new java.awt.Color(249, 232, 151));
        xoaBtn.setText("Xóa");
        xoaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaBtnActionPerformed(evt);
            }
        });

        suaBtn.setBackground(new java.awt.Color(18, 64, 118));
        suaBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        suaBtn.setForeground(new java.awt.Color(249, 232, 151));
        suaBtn.setText("Sửa");
        suaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaBtnActionPerformed(evt);
            }
        });

        themBtn.setBackground(new java.awt.Color(18, 64, 118));
        themBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        themBtn.setForeground(new java.awt.Color(249, 232, 151));
        themBtn.setText("Thêm mới");
        themBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themBtnActionPerformed(evt);
            }
        });

        Sort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Tên sách A-Z", "Số lượng tăng dần", "Giá sách tăng dần", "Sách ẩn" }));
        Sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortActionPerformed(evt);
            }
        });

        searchbar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        searchbar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbarKeyReleased(evt);
            }
        });

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Quản lí sách");

        spTable.setBorder(null);

        SachTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Số lượng", "Giá bán", "Tác giả", "Thể loại", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SachTB.getTableHeader().setReorderingAllowed(false);
        spTable.setViewportView(SachTB);

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 1048, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/raven/icon/search.png"))); // NOI18N

        nhapHangbtn.setBackground(new java.awt.Color(18, 64, 118));
        nhapHangbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nhapHangbtn.setForeground(new java.awt.Color(249, 232, 151));
        nhapHangbtn.setText("Nhập hàng");
        nhapHangbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapHangbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Sort, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(nhapHangbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(themBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(suaBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xoaBtn)
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xoaBtn)
                            .addComponent(suaBtn)
                            .addComponent(themBtn)
                            .addComponent(nhapHangbtn)
                            .addComponent(Sort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(652, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(61, Short.MAX_VALUE)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(16, 16, 16)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themBtnActionPerformed
        // TODO add your handling code here:
        Sach_Dialog s = new Sach_Dialog(null, true, Sach_Dialog.ActionType.ADD);
        s.setVisible(true);
        list = sv.getAll();
        showData(list);
    }//GEN-LAST:event_themBtnActionPerformed

    private void nhapHangbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapHangbtnActionPerformed
        // TODO add your handling code here:
        int row = SachTB.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sách để nhập hàng", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        nhapHang_Dialog nh = new nhapHang_Dialog(null, true);
        nh.detail(row);
        nh.setVisible(true);
        list = sv.getAll();
        showData(list);
    }//GEN-LAST:event_nhapHangbtnActionPerformed

    private void suaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaBtnActionPerformed
        // TODO add your handling code here:
        int row = SachTB.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một hàng để sửa", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Sach_Dialog s = new Sach_Dialog(null, true, Sach_Dialog.ActionType.EDIT);
        s.detail(row);
        s.setVisible(true);
        list = sv.getAll();
        showData(list);
    }//GEN-LAST:event_suaBtnActionPerformed

    private void xoaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaBtnActionPerformed
        // TODO add your handling code here:
        int row = SachTB.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một hàng để xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (choice != JOptionPane.YES_OPTION) {
            return; // Nếu người dùng không đồng ý xóa, thoát khỏi phương thức
        }
        Sach_Dialog s = new Sach_Dialog(null, true, Sach_Dialog.ActionType.EDIT);
        s.detail(row);
        s.delete();
        list = sv.getAll();
        showData(list);
    }//GEN-LAST:event_xoaBtnActionPerformed

    private void searchbarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbarKeyReleased
        // TODO add your handling code here:
        String searchText = searchbar.getText().trim().toLowerCase(); // Lấy văn bản từ ô tìm kiếm và chuẩn hóa nó

        DefaultTableModel model = (DefaultTableModel) SachTB.getModel(); // Lấy mô hình bảng hiện tại

        // Xóa tất cả các hàng khỏi bảng
        model.setRowCount(0);

        // Lặp qua tất cả các hàng trong dữ liệu ban đầu và thêm các hàng phù hợp vào bảng mới
        for (Sach sach : list) {
            if (sach.getTenSach().toLowerCase().contains(searchText)
                    || sach.getTacGia().toLowerCase().contains(searchText)
                    || sach.getTheLoai().toLowerCase().contains(searchText)
                    || sach.getTrangThai().toLowerCase().contains(searchText)
                    || sach.getGiaBan().toLowerCase().contains(searchText)
                    || sach.getSoLuong().toLowerCase().contains(searchText)
                    || sach.getSoTrang().toLowerCase().contains(searchText)
                    || sach.getId().toLowerCase().contains(searchText)) {
                model.addRow(new Object[]{
                    sach.getId(), sach.getTenSach(), sach.getSoLuong(), sach.getGiaBan(), sach.getTacGia(), sach.getTheLoai(), sach.getTrangThai()
                });
            }
        }
    }//GEN-LAST:event_searchbarKeyReleased

    private void SortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortActionPerformed
        // TODO add your handling code here:
        if (Sort.getSelectedItem().equals("Tên sách A-Z")) {
            sortByTenSachAZ();
        } else if (Sort.getSelectedItem().equals("Giá sách tăng dần")) {
            sortByGiaSachTangDan();
        } else if (Sort.getSelectedItem().equals("Số lượng tăng dần")) {
            sortBySoLuongTangDan();
        } else if (Sort.getSelectedItem().equals("Sách ẩn")) {
            hienThiSachAn();
        } else if (Sort.getSelectedItem().equals(" ")) {
            list = sv.getAll();
            showData(list);
        }
    }//GEN-LAST:event_SortActionPerformed

    private void hienThiSachAn() {
        List<Sach> sachAnList = new ArrayList<>();
        for (Sach sach : list) {
            if (sach.getTrangThai().equals("Ẩn")) {
                sachAnList.add(sach);
            }
        }
        showData(sachAnList);
    }

    private void sortBySoLuongTangDan() {
        Comparator<Sach> sachComparator = new Comparator<Sach>() {
            @Override
            public int compare(Sach sach1, Sach sach2) {
                int soLuong1 = Integer.parseInt(sach1.getSoLuong());
                int soLuong2 = Integer.parseInt(sach2.getSoLuong());
                return Integer.compare(soLuong1, soLuong2);
            }
        };
        Collections.sort(list, sachComparator);
        showData(list);
    }

    private void sortByGiaSachTangDan() {
        Comparator<Sach> sachComparator = new Comparator<Sach>() {
            @Override
            public int compare(Sach sach1, Sach sach2) {
                double giaBan1 = Double.parseDouble(sach1.getGiaBan());
                double giaBan2 = Double.parseDouble(sach2.getGiaBan());
                return Double.compare(giaBan1, giaBan2);
            }
        };
        Collections.sort(list, sachComparator);
        showData(list);
    }

    private void sortByTenSachAZ() {
        Comparator<Sach> sachComparator = Comparator.comparing(Sach::getTenSach);
        Collections.sort(list, sachComparator);
        showData(list);
    }

    public void showData(List<Sach> listVC) {
        dtm.setRowCount(0);
        listVC.forEach(c -> dtm.addRow(new Object[]{
            c.getId(), c.getTenSach(), c.getSoLuong(), c.getGiaBan(), c.getTacGia(), c.getTheLoai(), c.getTrangThai()
        }));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.swing.Table SachTB;
    private javax.swing.JComboBox<String> Sort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nhapHangbtn;
    private com.raven.swing.PanelBorder panelBorder1;
    private javax.swing.JTextField searchbar;
    private javax.swing.JScrollPane spTable;
    private javax.swing.JButton suaBtn;
    private javax.swing.JButton themBtn;
    private javax.swing.JButton xoaBtn;
    // End of variables declaration//GEN-END:variables
}
